Background Research
	Cellular Automaton(CA), also known as cellular spaces, is a discrete model that is used in mathematics, science, computation theory, and modeling. A CA will usually consist of a regular grid of cells, each one in one of a finite number of states such as dead or alive, infected or cured. This grid can be any dimension with infinite number of squares. The rule for updating each state will usually be constant, but it can change in stochastic cellular automaton and asynchronous cellular automaton. There are four primary classifications to automata:
	automata in which patterns generally stabilize into homogeneity
	automata in which patterns evolve into mostly stable or oscillating structures
	automata in which patterns evolve in a seemingly chaotic fashion 
	automata in which patterns become extremely complex and may last for a long time, with stable local structures.
	Epidemic simulation is the simulation of epidemics. For our project, we will be using Cellular Automata to simulate the spread of an epidemic. When an area inside a cell within the Cellular Automata is infected, it will start changing color. The darker the cell gets is directly proportional to how what percent of the cell’s population is infected. Epidemiology is the branch of medicine that deals with the control of diseases. Epidemic models all share one property: The virtual world in which they run is an idealized and approximate one. When modelling a complex system, there is a trade-of between the model's degree of concept and its usefulness. The question for this is what details can be excluded without devaluating or destroying the results.
	In our program, we are using a support vector machine (SVM) which is a learning model that use learning algorithms to analyze and recognize patterns. This is extremely useful in the real world, especially in epidemiology. When a breakout happens, it is crucial to determine where this outbreak will travel and identify patterns to contain the outbreak. In an SVM module, data is plotted in space, mapped in a way so that the examples of the separate categories are divided by a clear gap. This SVM will try to make the gap as wide as possible. SVM’s are able to perform linear classification as well non-linear classification using the kernel trick. The kernel trick implicitly maps the inputs (data) it gets into high-dimensional feature spaces
